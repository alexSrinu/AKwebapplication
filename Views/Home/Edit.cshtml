@model AKwebapplication.Models.Home

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_LayoutPage1.cshtml";
}

<h2>Edit</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div class="form-group">
        <label asp-for="Name">Full Name</label>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Mobile">Mobile Number</label>
        @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control" })
        <span asp-validation-for="Mobile" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="JoinDate">Join Date</label>
        @Html.TextBoxFor(m => m.JoinDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        <span asp-validation-for="JoinDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FeePaidDate">Fee Paid Date</label>
        @Html.TextBoxFor(m => m.FeePaidDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", id = "feePaidDate" })
        <span asp-validation-for="FeePaidDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DueDate">Due Date</label>
        @Html.TextBoxFor(m => m.DueDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", id = "dueDate", @readonly = "readonly" })
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Occupation">Occupation</label>
        @Html.TextBoxFor(m => m.Occupation, new { @class = "form-control" })
        <span asp-validation-for="Occupation" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Gender">Gender</label>
        @Html.DropDownListFor(m => m.Gender, new SelectList(new List<SelectListItem> {
            new SelectListItem { Text = "Select Gender", Value = "" },
            new SelectListItem { Text = "Male", Value = "Male" },
            new SelectListItem { Text = "Female", Value = "Female" },
            new SelectListItem { Text = "Other", Value = "Other" }
        }, "Value", "Text", Model.Gender), new { @class = "form-control" })
        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Address">Address</label>
        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Sharing">Sharing Preference</label>
        @Html.DropDownListFor(m => m.Sharing, new SelectList(Enumerable.Range(1, 7).Select(i => new SelectListItem
        {
            Text = i.ToString(),
            Value = i.ToString()
        }), "Value", "Text", Model.Sharing), new { @class = "form-control" })
        <span asp-validation-for="Sharing" class="text-danger"></span>
    </div>

    <div class="form-group row" id="imageUpload">
        <label class="col-sm-2 col-form-label" data-toggle="tooltip" data-placement="top" title="Image Size: Width is 401 x Height is 201, Under 1MB">Partner Image <i class="bi bi-info-circle text-primary"></i></label>

        <div class="col-sm-10">
            @if (!string.IsNullOrEmpty(Model.FileName))
            {
                @Html.HiddenFor(model => model.FileName)
                <img src="@Url.Content("~/Uploads/" + Model.FileName)" alt="Current Image" style="max-width: 200px;" />
                <p>Upload a new image to replace the current one.</p>
            }

            <input name="File" type="file" accept="image/*" class="form-control" />
            <span class="text-danger" id="divInvalidImageType"></span>
            <br />
          
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Update</button>
</form>

<script>
    document.getElementById('feePaidDate').addEventListener('change', function () {
        var feePaidDate = new Date(this.value);
        if (!isNaN(feePaidDate.getTime())) {
            var dueDate = new Date(feePaidDate);
            dueDate.setDate(dueDate.getDate() - 1);
            document.getElementById('dueDate').value = dueDate.toISOString().split('T')[0];
        }
    });
</script>
